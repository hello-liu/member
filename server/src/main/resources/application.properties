server.port=8000
spring.application.name=moss-server
#eureka.client.service-url.defaultZone=http://localhost:8100/eureka
# 设置不请求注册中心
eureka.client.register-with-eureka=false
eureka.client.fetch-registry=false

# mybatis
mybatis.typeAliasesPackage=com.moss.server.model
mybatis.mapperLocations=classpath:mapper/*.xml
#mybatis.multiStatementAllow=true
mybatis.configuration.multiple-result-sets-enabled=true
mybatis.configuration.map-underscore-to-camel-case=true
# 设置mybatis日志级别，打印sql
logging.level.com.moss.server.dao=debug
#logging.level.com.moss.server.dao=info

# PageHelper分页插件配置
#分页插件会自动检测当前的数据库链接，自动选择合适的分页方式。
pagehelper.helper-dialect=postgresql
#分页合理化参数，默认值为false。当该参数设置为 true 时，pageNum<=0 时会查询第一页， pageNum>pages（超过总数时），会查询最后一页。默认false 时，直接根据参数进行查询。
pagehelper.reasonable=true
#支持通过 Mapper 接口参数来传递分页参数，默认值false，分页插件会从查询方法的参数值中，自动根据上面 params 配置的字段中取值，查找到合适的值时就会自动分页。
pagehelper.support-methods-arguments=true
#为了支持startPage(Object params)方法，增加了该参数来配置参数映射，用于从对象中根据属性名取值， 可以配置 pageNum,pageSize,count,pageSizeZero,reasonable，不配置映射的用默认值， 默认值为pageNum=pageNum。
pagehelper.params=count=countSql



## 数据源配置

#数据源
#spring.datasource.driverClassName = com.mysql.jdbc.Driver

spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.url=jdbc:postgresql://127.0.0.1:5432/member?allowMultiQueries=true

spring.datasource.username=member
spring.datasource.password=member
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.druid.filter.wall.config.multi-statement-allow=true
#连接池
spring.datasource.druid.initial-size=10
spring.datasource.druid.max-active=30
spring.datasource.druid.min-idle=5
spring.datasource.druid.max-wait=60000
spring.datasource.druid.time-between-eviction-runs-millis=600000
spring.datasource.druid.min-evictable-idle-time-millis=300000
spring.datasource.druid.test-on-borrow=true
spring.datasource.druid.test-on-return=true
spring.datasource.druid.test-while-idle=true
spring.datasource.druid.validation-query=SELECT 1
spring.datasource.druid.keep-alive=true
spring.datasource.druid.remove-abandoned=true
spring.datasource.druid.remove-abandoned-timeout=1800
spring.datasource.druid.log-abandoned=true
spring.datasource.druid.pool-prepared-statements=true
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20
spring.datasource.druid.filters=stat,wall,slf4j
spring.datasource.druid.connect-properties.mergeSql=true
spring.datasource.druid.connect-properties.slowSqlMillis=5000
spring.datasource.druid.use-global-data-source-stat=true

#http://localhost:8765/druid/sql.html  访问这个页面


# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址
spring.redis.host=127.0.0.1
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=8
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=10000

# 设置token过期时间,单位秒
user.token.timeout.web=1800
user.token.timeout.app=1800
user.token.timeout.pc=1800

# rabbitmq
spring.rabbitmq.host=127.0.0.1
spring.rabbitmq.port=5672
spring.rabbitmq.username=liu
spring.rabbitmq.password=120
spring.rabbitmq.publisher-confirms=true
spring.rabbitmq.publisher-returns=true
spring.rabbitmq.template.mandatory=true
#spring.rabbitmq.virtualHost=test


spring.rabbitmq.listener.concurrency=20  //最小消息监听线程数
spring.rabbitmq.listener.max-concurrency=20 //最大消息监听线程数